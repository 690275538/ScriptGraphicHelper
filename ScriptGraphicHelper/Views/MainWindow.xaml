<Window
    x:Class="ScriptGraphicHelper.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:prism="http://prismlibrary.com/"
    Name="_Window"
    Title="综合图色助手 V1.1.6"
    Width="1760"
    Height="990"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="{DynamicResource MaterialDesignPaper}"
    Closed="Window_Closed"
    Cursor="{Binding WindowCursor, Mode=TwoWay}"
    FontFamily="{materialDesign:MaterialDesignFont}"
    Loaded="Window_Loaded"
    PreviewKeyDown="Window_PreviewKeyDown"
    SizeChanged="Window_SizeChanged"
    TextElement.FontSize="14"
    TextElement.FontWeight="Normal"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}">
    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding ClearData_Click}" />
        <KeyBinding
            Key="F2"
            Command="{Binding ConfigSet_Click}"
            CommandParameter="{Binding ElementName=_Window}" />
        <KeyBinding
            Key="A"
            Command="{Binding Key_AddColorInfo}"
            CommandParameter="A" />
        <KeyBinding
            Key="S"
            Command="{Binding Key_AddColorInfo}"
            CommandParameter="S" />
        <KeyBinding
            Key="D"
            Command="{Binding Key_AddColorInfo}"
            CommandParameter="D" />
    </Window.InputBindings>

    <Grid>
        <materialDesign:Snackbar
            x:Name="AboutHint"
            Padding="40,0,0,0"
            VerticalAlignment="Top"
            IsActive="True"
            Message="F1清空表格, F2更改配置" />
        <Grid
            x:Name="Panel_1"
            Width="auto"
            Height="auto"
            HorizontalAlignment="Left"
            VerticalAlignment="Top">
            <ScrollViewer
                x:Name="Scroll"
                CanContentScroll="False"
                Focusable="False"
                HorizontalScrollBarVisibility="Hidden"
                Style="{DynamicResource MaterialDesignScrollViewer}"
                VerticalScrollBarVisibility="Hidden">
                <StackPanel
                    Width="Auto"
                    Height="Auto"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top">
                    <ComboBox
                        x:Name="EmulatorOptions"
                        Width="120"
                        Margin="20,10"
                        materialDesign:ColorZoneAssist.Mode="Inverted"
                        materialDesign:HintAssist.FloatingOffset="0, -18"
                        materialDesign:HintAssist.FloatingScale="0.8"
                        materialDesign:HintAssist.Hint="{Binding EmulatorOptionsHint, Mode=TwoWay}"
                        materialDesign:TextFieldAssist.HasClearButton="False"
                        materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource AttentionToActionBrush}"
                        ItemsSource="{Binding EmulatorInfo, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                        <ComboBox.ContextMenu>
                            <ContextMenu Style="{DynamicResource MaterialDesignContextMenu}">
                                <MenuItem Command="{Binding ClearEmulatorOptions_Click}" Header="重置选择" />
                            </ContextMenu>
                        </ComboBox.ContextMenu>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Emulator_SelectionChanged}" CommandParameter="{Binding ElementName=_Window}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <Button
                        x:Name="ScreenShot"
                        Width="120"
                        Margin="20,10"
                        Command="{Binding ScreenShot_Click}"
                        Cursor="Hand"
                        Style="{DynamicResource MaterialDesignRaisedButton}">
                        截图
                    </Button>
                    <Button
                        x:Name="Open"
                        Width="120"
                        Margin="20,10"
                        Command="{Binding Open_Click}"
                        Style="{DynamicResource MaterialDesignRaisedButton}">
                        载入
                    </Button>
                    <Button
                        x:Name="Save"
                        Width="120"
                        Margin="20,10"
                        Command="{Binding Save_Click}"
                        Style="{DynamicResource MaterialDesignRaisedButton}">
                        保存
                    </Button>
                    <Button
                        x:Name="TurnRight"
                        Width="120"
                        Margin="20,10"
                        Command="{Binding TurnRight_Click}"
                        Style="{DynamicResource MaterialDesignRaisedButton}">
                        右转
                    </Button>
                    <Button
                        x:Name="Test"
                        Width="120"
                        Margin="20,10"
                        Command="{Binding Test_Click}"
                        CommandParameter="{Binding ElementName=_Window}"
                        Style="{DynamicResource MaterialDesignRaisedButton}">
                        测试
                    </Button>
                    <ComboBox
                        x:Name="Sim"
                        Width="120"
                        Margin="20,10"
                        materialDesign:ColorZoneAssist.Mode="Inverted"
                        materialDesign:HintAssist.FloatingOffset="0, -18"
                        materialDesign:HintAssist.FloatingScale="0.8"
                        materialDesign:HintAssist.Hint="相似度"
                        materialDesign:TextFieldAssist.HasClearButton="False"
                        materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryAccentBrush}"
                        SelectedIndex="{Binding SimSelectedIndex, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                        <ComboBoxItem>100</ComboBoxItem>
                        <ComboBoxItem>95</ComboBoxItem>
                        <ComboBoxItem>90</ComboBoxItem>
                        <ComboBoxItem>85</ComboBoxItem>
                        <ComboBoxItem>80</ComboBoxItem>
                    </ComboBox>
                    <TextBox
                        x:Name="Result"
                        Width="120"
                        Margin="20,10"
                        materialDesign:HintAssist.FloatingOffset="0, -18"
                        materialDesign:HintAssist.FloatingScale="0.8"
                        materialDesign:HintAssist.Hint="返回值"
                        materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                        IsReadOnly="True"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        Text="{Binding TestResult}" />

                    <ComboBox
                        x:Name="Format"
                        Width="120"
                        Margin="20,10"
                        materialDesign:ColorZoneAssist.Mode="Inverted"
                        materialDesign:HintAssist.FloatingOffset="0, -18"
                        materialDesign:HintAssist.FloatingScale="0.8"
                        materialDesign:HintAssist.Hint="格式"
                        materialDesign:TextFieldAssist.HasClearButton="False"
                        materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryAccentBrush}"
                        SelectedIndex="{Binding FormatSelectedIndex, Mode=TwoWay}"
                        Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding Format_SelectionChanged}" CommandParameter="{Binding ElementName=_Window}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBoxItem>多点比色格式</ComboBoxItem>
                        <ComboBoxItem>大漠/乐玩找色格式</ComboBoxItem>
                        <ComboBoxItem>按键多点找色格式</ComboBoxItem>
                        <ComboBoxItem>按键多点比色格式</ComboBoxItem>
                        <ComboBoxItem>触动多点找色格式</ComboBoxItem>
                        <ComboBoxItem>触动多点比色格式</ComboBoxItem>
                        <ComboBoxItem>AJ多点找色格式</ComboBoxItem>
                        <ComboBoxItem>EC多点找色格式</ComboBoxItem>
                        <ComboBoxItem>自定义找色格式</ComboBoxItem>
                        <ComboBoxItem>自定义比色格式</ComboBoxItem>
                        <ComboBoxItem>锚点多点比色格式</ComboBoxItem>
                        <ComboBoxItem>锚点多点找色格式</ComboBoxItem>
                    </ComboBox>
                    <TextBox
                        x:Name="Range"
                        Width="120"
                        Margin="20,10"
                        materialDesign:HintAssist.FloatingOffset="0, -18"
                        materialDesign:HintAssist.FloatingScale="0.8"
                        materialDesign:HintAssist.Hint="范围"
                        materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        Text="{Binding Range, Mode=TwoWay}" />
                    <Button
                        x:Name="CutImg"
                        Width="120"
                        Margin="20,10"
                        Command="{Binding CutBmp_Click}"
                        Style="{DynamicResource MaterialDesignRaisedButton}">
                        裁图
                    </Button>
                    <Button
                        x:Name="Create"
                        Width="120"
                        Margin="20,10"
                        Command="{Binding Create_Click}"
                        Style="{DynamicResource MaterialDesignRaisedButton}">
                        生成
                    </Button>
                    <TextBox
                        x:Name="ColorString"
                        Width="120"
                        Height="150"
                        Margin="20,10"
                        Padding="0"
                        materialDesign:HintAssist.FloatingOffset="0, -18"
                        materialDesign:HintAssist.FloatingScale="1"
                        materialDesign:HintAssist.Hint="生成字符串"
                        materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
                        IsReadOnly="True"
                        Style="{StaticResource MaterialDesignOutlinedTextFieldTextBox}"
                        Text="{Binding CreateStr}"
                        TextWrapping="Wrap" />
                    <Button
                        x:Name="Copy"
                        Width="120"
                        Margin="20,10"
                        Click="Copy_Click"
                        Style="{DynamicResource MaterialDesignRaisedButton}">
                        复制
                    </Button>
                    <Button
                        x:Name="Clear"
                        Width="120"
                        Margin="20,10"
                        Command="{Binding Clear_Click}"
                        Style="{DynamicResource MaterialDesignRaisedButton}">
                        清空
                    </Button>
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <StackPanel
            x:Name="Panel_3"
            Width="auto"
            Height="auto"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            SizeChanged="Window_SizeChanged">
            <Border
                Margin="15,15"
                BorderBrush="#666666"
                BorderThickness="1"
                Style="{DynamicResource MaterialDesignToolBarMainPanelBorderStyle}">
                <DataGrid
                    x:Name="Color_Info"
                    materialDesign:DataGridAssist.ColumnHeaderPadding="4,6,4,6"
                    AllowDrop="true"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserSortColumns="False"
                    ColumnHeaderStyle="{DynamicResource MaterialDesignDataGridColumnHeader_Center}"
                    FontSize="16"
                    ItemsSource="{Binding ColorInfos, Mode=TwoWay}"
                    RowHeaderStyle="{DynamicResource MaterialDesignDataGridRowHeader}"
                    RowStyle="{DynamicResource MaterialDesignDataGridRow}"
                    SelectedIndex="{Binding ColorInfoSelect, Mode=TwoWay}"
                    SelectionMode="Extended"
                    SelectionUnit="FullRow"
                    Style="{DynamicResource MaterialDesignDataGrid}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="序号" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock HorizontalAlignment="Center" Text="{Binding Index}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <materialDesign:DataGridComboBoxColumn
                            x:Name="TheAnchors"
                            Header="锚点"
                            ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.AnchorsValue}"
                            SelectedValueBinding="{Binding Anchors}"
                            Visibility="Collapsed" />
                        <DataGridTemplateColumn Header="坐标" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock HorizontalAlignment="Center" Text="{Binding PointStr}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="颜色" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        Foreground="{Binding Brush_1}"
                                        Text="{Binding ColorStr}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn
                            x:Name="OffsetList"
                            Header="偏色"
                            IsReadOnly="True"
                            Visibility="Hidden">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock HorizontalAlignment="Center" Text="{Binding OffsetColor, Mode=TwoWay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="状态">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        HorizontalAlignment="Center"
                                        Background="{Binding Brush_2}"
                                        IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>

                    <DataGrid.ContextMenu>
                        <ContextMenu Style="{DynamicResource MaterialDesignContextMenu}">
                            <MenuItem Click="CopyPoint_Click" Header="复制坐标" />
                            <MenuItem Click="CopyColor_Click" Header="复制颜色值" />
                            <MenuItem Command="{Binding AddOffset_Click}" Header="添加偏色" />
                            <MenuItem Command="{Binding GetOffset_Click}" Header="计算偏色" />
                            <MenuItem Command="{Binding ClearData_Click}" Header="清空列表" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </Border>
        </StackPanel>

        <Grid
            x:Name="Panel_2"
            Width="auto"
            Height="auto"
            Margin="160,15"
            HorizontalAlignment="Left"
            VerticalAlignment="Top">
            <ScrollViewer
                x:Name="Scroll_1"
                Focusable="False"
                HorizontalScrollBarVisibility="Auto"
                Style="{DynamicResource MaterialDesignScrollViewer}"
                VerticalScrollBarVisibility="Auto">
                <Image
                    x:Name="Img"
                    Width="{Binding ImgWidth}"
                    Height="{Binding ImgHeight}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Focusable="True"
                    SizeChanged="Window_SizeChanged"
                    Source="{Binding ImgSource}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding Img_MouseDown}" CommandParameter="{Binding ElementName=_Window}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseMove">
                            <i:InvokeCommandAction Command="{Binding Img_MouseMove}" CommandParameter="{Binding ElementName=_Window}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Img_MouseLeftButtonUp}" CommandParameter="{Binding ElementName=Img}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave">
                            <i:InvokeCommandAction Command="{Binding Img_MouseLeave}" CommandParameter="{Binding ElementName=_Window}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseEnter">
                            <i:InvokeCommandAction Command="{Binding Img_MouseEnter}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
            </ScrollViewer>
        </Grid>

        <StackPanel
            x:Name="Panel_4"
            Width="auto"
            Height="auto"
            Margin="{Binding LoupeMargin}"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            IsEnabled="False"
            Visibility="{Binding LoupeVisibility, Mode=TwoWay}">
            <Image
                x:Name="Loupe"
                Width="241"
                Height="241"
                Source="{Binding LoupeWriteBmp}"
                Stretch="UniformToFill" />
            <StackPanel
                Width="241"
                Height="auto"
                Background="#666666"
                Orientation="Horizontal">
                <TextBlock Margin="10,3,0,8" Foreground="#bbbbbb">x</TextBlock>
                <TextBlock
                    Margin="10,8,0,8"
                    FontSize="16"
                    Text="{Binding PointX}" />
                <TextBlock Margin="70,3,0,8" Foreground="#bbbbbb">y</TextBlock>
                <TextBlock
                    Margin="10,8,0,8"
                    FontSize="16"
                    Text="{Binding PointY}" />
            </StackPanel>
        </StackPanel>
        <Rectangle
            x:Name="SelectRectangle"
            Width="{Binding SelectRectangleWidth, Mode=TwoWay}"
            Height="{Binding SelectRectangleHeight, Mode=TwoWay}"
            Margin="{Binding SelectRectangleMargin, Mode=TwoWay}"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Fill="Transparent"
            Focusable="False"
            RadiusX="0"
            RadiusY="0"
            Stroke="Red"
            StrokeDashArray="3"
            Visibility="{Binding SelectRectangleVisibility, Mode=TwoWay}" />
        <StackPanel
            x:Name="Panel_5"
            Width="auto"
            Height="auto"
            Margin="{Binding FindResultMargin}"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            IsVisibleChanged="Panel_5_IsVisibleChanged"
            Visibility="{Binding FindResultVisibility, Mode=TwoWay}">
            <Image
                x:Name="FindResult"
                Width="29"
                Height="38"
                Source="/ScriptGraphicHelper;component/Images/point.png"
                Stretch="UniformToFill" />
        </StackPanel>
    </Grid>
</Window>
